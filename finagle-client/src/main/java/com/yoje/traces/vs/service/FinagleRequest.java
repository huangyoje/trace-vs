/**
 * Generated by Scrooge
 *   version: 4.5.0
 *   rev: 014664de600267b36809bbc85225e26aec286216
 *   built at: 20160203-205352
 */

package com.yoje.traces.vs.service;

import com.twitter.scrooge.Option;
import com.twitter.scrooge.Utilities;
import com.twitter.scrooge.ThriftStruct;
import com.twitter.scrooge.ThriftStructCodec;
import com.twitter.scrooge.ThriftStructCodec3;
import org.apache.thrift.protocol.*;
import java.nio.ByteBuffer;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;


@javax.annotation.Generated(value = "com.twitter.scrooge.Compiler")
public class FinagleRequest implements ThriftStruct {
  private static final TStruct STRUCT = new TStruct("FinagleRequest");
  private static final TField ParamField = new TField("param", TType.STRING, (short) 1);
  final String param;

  public static class Builder {
    private String _param = null;
    private Boolean _got_param = false;

    public Builder param(String value) {
      this._param = value;
      this._got_param = true;
      return this;
    }

    public Builder unsetParam() {
      this._param = null;
      this._got_param = false;
      return this;
    }

    public FinagleRequest build() {
      return new FinagleRequest(
        this._param    );
    }
  }

  public Builder copy() {
    Builder builder = new Builder();
    builder.param(this.param);
    return builder;
  }

  public static ThriftStructCodec<FinagleRequest> CODEC = new ThriftStructCodec3<FinagleRequest>() {
    @java.lang.Override
    public FinagleRequest decode(TProtocol _iprot) throws org.apache.thrift.TException {
      Builder builder = new Builder();
      String param = null;
      Boolean _done = false;
      _iprot.readStructBegin();
      while (!_done) {
        TField _field = _iprot.readFieldBegin();
        if (_field.type == TType.STOP) {
          _done = true;
        } else {
          switch (_field.id) {
            case 1: /* param */
              switch (_field.type) {
                case TType.STRING:
                  String param_item;
                  param_item = _iprot.readString();
                  param = param_item;
                  break;
                default:
                  TProtocolUtil.skip(_iprot, _field.type);
              }
              builder.param(param);
              break;
            default:
              TProtocolUtil.skip(_iprot, _field.type);
          }
          _iprot.readFieldEnd();
        }
      }
      _iprot.readStructEnd();
      try {
        return builder.build();
      } catch (IllegalStateException stateEx) {
        throw new TProtocolException(stateEx.getMessage());
      }
    }

    @java.lang.Override
    public void encode(FinagleRequest struct, TProtocol oprot) throws org.apache.thrift.TException {
      struct.write(oprot);
    }
  };

  public static FinagleRequest decode(TProtocol _iprot) throws org.apache.thrift.TException {
    return CODEC.decode(_iprot);
  }

  public static void encode(FinagleRequest struct, TProtocol oprot) throws org.apache.thrift.TException {
    CODEC.encode(struct, oprot);
  }

  public FinagleRequest(
    String param
  ) {
    this.param = param;
  }


  public String getParam() {
    return this.param;
  }
  public boolean isSetParam() {
    return this.param != null;
  }

  public void write(TProtocol _oprot) throws org.apache.thrift.TException {
    validate();
    _oprot.writeStructBegin(STRUCT);
      _oprot.writeFieldBegin(ParamField);
      String param_item = param;
      _oprot.writeString(param_item);
      _oprot.writeFieldEnd();
    _oprot.writeFieldStop();
    _oprot.writeStructEnd();
  }

  private void validate() throws org.apache.thrift.protocol.TProtocolException {
  }


  @java.lang.Override
  public boolean equals(Object other) {
    if (!(other instanceof FinagleRequest)) return false;
    FinagleRequest that = (FinagleRequest) other;
    return
this.param.equals(that.param);
  }

  @java.lang.Override
  public String toString() {
    return "FinagleRequest(" + this.param + ")";
  }

  @java.lang.Override
  public int hashCode() {
    int hash = 1;
    hash = hash * (this.param == null ? 0 : this.param.hashCode());
    return hash;
  }
}