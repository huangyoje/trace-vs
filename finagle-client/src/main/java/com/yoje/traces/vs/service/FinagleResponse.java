/**
 * Generated by Scrooge
 *   version: 4.5.0
 *   rev: 014664de600267b36809bbc85225e26aec286216
 *   built at: 20160203-205352
 */

package com.yoje.traces.vs.service;

import com.twitter.scrooge.Option;
import com.twitter.scrooge.Utilities;
import com.twitter.scrooge.ThriftStruct;
import com.twitter.scrooge.ThriftStructCodec;
import com.twitter.scrooge.ThriftStructCodec3;
import org.apache.thrift.protocol.*;
import java.nio.ByteBuffer;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;


@javax.annotation.Generated(value = "com.twitter.scrooge.Compiler")
public class FinagleResponse implements ThriftStruct {
  private static final TStruct STRUCT = new TStruct("FinagleResponse");
  private static final TField RespField = new TField("resp", TType.STRING, (short) 1);
  final String resp;

  public static class Builder {
    private String _resp = null;
    private Boolean _got_resp = false;

    public Builder resp(String value) {
      this._resp = value;
      this._got_resp = true;
      return this;
    }

    public Builder unsetResp() {
      this._resp = null;
      this._got_resp = false;
      return this;
    }

    public FinagleResponse build() {
      return new FinagleResponse(
        this._resp    );
    }
  }

  public Builder copy() {
    Builder builder = new Builder();
    builder.resp(this.resp);
    return builder;
  }

  public static ThriftStructCodec<FinagleResponse> CODEC = new ThriftStructCodec3<FinagleResponse>() {
    @java.lang.Override
    public FinagleResponse decode(TProtocol _iprot) throws org.apache.thrift.TException {
      Builder builder = new Builder();
      String resp = null;
      Boolean _done = false;
      _iprot.readStructBegin();
      while (!_done) {
        TField _field = _iprot.readFieldBegin();
        if (_field.type == TType.STOP) {
          _done = true;
        } else {
          switch (_field.id) {
            case 1: /* resp */
              switch (_field.type) {
                case TType.STRING:
                  String resp_item;
                  resp_item = _iprot.readString();
                  resp = resp_item;
                  break;
                default:
                  TProtocolUtil.skip(_iprot, _field.type);
              }
              builder.resp(resp);
              break;
            default:
              TProtocolUtil.skip(_iprot, _field.type);
          }
          _iprot.readFieldEnd();
        }
      }
      _iprot.readStructEnd();
      try {
        return builder.build();
      } catch (IllegalStateException stateEx) {
        throw new TProtocolException(stateEx.getMessage());
      }
    }

    @java.lang.Override
    public void encode(FinagleResponse struct, TProtocol oprot) throws org.apache.thrift.TException {
      struct.write(oprot);
    }
  };

  public static FinagleResponse decode(TProtocol _iprot) throws org.apache.thrift.TException {
    return CODEC.decode(_iprot);
  }

  public static void encode(FinagleResponse struct, TProtocol oprot) throws org.apache.thrift.TException {
    CODEC.encode(struct, oprot);
  }

  public FinagleResponse(
    String resp
  ) {
    this.resp = resp;
  }


  public String getResp() {
    return this.resp;
  }
  public boolean isSetResp() {
    return this.resp != null;
  }

  public void write(TProtocol _oprot) throws org.apache.thrift.TException {
    validate();
    _oprot.writeStructBegin(STRUCT);
      _oprot.writeFieldBegin(RespField);
      String resp_item = resp;
      _oprot.writeString(resp_item);
      _oprot.writeFieldEnd();
    _oprot.writeFieldStop();
    _oprot.writeStructEnd();
  }

  private void validate() throws org.apache.thrift.protocol.TProtocolException {
  }


  @java.lang.Override
  public boolean equals(Object other) {
    if (!(other instanceof FinagleResponse)) return false;
    FinagleResponse that = (FinagleResponse) other;
    return
this.resp.equals(that.resp);
  }

  @java.lang.Override
  public String toString() {
    return "FinagleResponse(" + this.resp + ")";
  }

  @java.lang.Override
  public int hashCode() {
    int hash = 1;
    hash = hash * (this.resp == null ? 0 : this.resp.hashCode());
    return hash;
  }
}